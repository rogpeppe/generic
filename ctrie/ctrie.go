// Code generated by go2go; DO NOT EDIT.


//line ctrie.go2:24
package ctrie

//line ctrie.go2:24
import (
//line ctrie.go2:24
 "bytes"
//line ctrie.go2:24
 "errors"
//line ctrie.go2:24
 "github.com/rogpeppe/generic/gatomic"
//line ctrie.go2:24
 "hash"
//line ctrie.go2:24
 "hash/fnv"
//line ctrie.go2:24
 "strconv"
//line ctrie.go2:24
 "sync"
//line ctrie.go2:24
 "sync/atomic"
//line ctrie.go2:24
 "testing"
//line ctrie.go2:24
 "time"
//line ctrie.go2:24
 "unsafe"
//line ctrie.go2:24
)

//line ctrie.go2:34
const (
//line ctrie.go2:36
 w = 5

//line ctrie.go2:39
 exp2 = 32
)

//line ctrie.go2:43
type HashFactory func() hash.Hash32

func defaultHashFactory() hash.Hash32 {
	return fnv.New32a()
}

//line ctrie.go2:61
type generation struct{ _ bool }

//line ctrie.go2:254
type branch interface{}

//line ctrie.go2:372
var errCanceled = errors.New("canceled")

//line ctrie.go2:805
func flagPos(hashcode uint32, lev uint, bmp uint32) (uint32, uint32) {
	idx := (hashcode >> lev) & 0x1f
	flag := uint32(1) << uint32(idx)
	mask := uint32(flag - 1)
	pos := bitCount(bmp & mask)
	return flag, pos
}

func bitCount(x uint32) uint32 {
	x -= (x >> 1) & 0x55555555
	x = ((x >> 2) & 0x33333333) + (x & 0x33333333)
	x = ((x >> 4) + x) & 0x0f0f0f0f
	x *= 0x01010101
	return x >> 24
}

//line ctrie.go2:819
type Importable୦ int
//line ctrie.go2:819
type _ bytes.Buffer

//line ctrie.go2:819
var _ = errors.As

//line ctrie.go2:819
type _ gatomic.Importable୦
//line ctrie.go2:819
type _ hash.Hash

//line ctrie.go2:819
var _ = fnv.New128
//line ctrie.go2:819
var _ = strconv.AppendBool

//line ctrie.go2:819
type _ sync.Cond

//line ctrie.go2:819
var _ = atomic.AddInt32
//line ctrie.go2:819
var _ = testing.AllocsPerRun

//line ctrie.go2:819
const _ = time.ANSIC

//line ctrie.go2:819
type _ unsafe.Pointer
