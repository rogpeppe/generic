// Code generated by go2go; DO NOT EDIT.


//line main.go2:1
package main

//line main.go2:1
import (
//line main.go2:1
 "bufio"
//line main.go2:1
 "fmt"
//line main.go2:1
 "io"
//line main.go2:1
 "strconv"
//line main.go2:1
 "strings"
//line main.go2:1
)

//line main.go2:9
func main() {
	r := strings.NewReader(`
1
3
5
6
10
`[1:])
	sum, err := instantiate୦୦Reduce୦int୦int(instantiate୦୦Select୦int(instantiate୦୦Map୦string୦int(
//line main.go2:20
  Lines(r),
				strconv.Atoi,
	), odd,
//line main.go2:24
 ), 0,
//line main.go2:26
  func(x, y int) (int, error) { return x + y, nil },
	)
	if err != nil {
		fmt.Printf("error: %v\n", err)
		return
	}
	fmt.Println(sum)
}

func odd(x int) bool {
	return x%2 == 1
}

//line iter.go2:102
func instantiate୦୦Reduce୦int୦int(i instantiate୦୦Iter୦int, first int, f func(int, int,) (int, error)) (int, error) {
	x := first
	for i.Next() {
		y, err := f(x, i.Item())
		if err != nil {
			return x, err
		}
		x = y
	}
	return x, nil
}

func instantiate୦୦Select୦int(i instantiate୦୦Iter୦int, f func(int,) bool) instantiate୦୦Iter୦int {
	return instantiate୦୦selectIter୦int{
		iter: i,
		f:    f,
	}
}
//line iter.go2:64
func instantiate୦୦Map୦string୦int(i instantiate୦୦Iter୦string, f func(string,) (int, error)) instantiate୦୦Iter୦int {
	return &instantiate୦୦mapIter୦string୦int{
		f:    f,
		iter: i,
	}
}

//line iter.go2:69
type instantiate୦୦Iter୦int interface {
//line iter.go2:8
 Next() bool
			Item() int
			Err() error
}
//line iter.go2:11
type instantiate୦୦selectIter୦int struct {
//line iter.go2:122
 iter instantiate୦୦Iter୦int
	f func(int,) bool
}

func (i instantiate୦୦selectIter୦int,) Next() bool {
	for {
		if !i.iter.Next() {
			return false
		}
		if i.f(i.iter.Item()) {
			return true
		}
	}
}

func (i instantiate୦୦selectIter୦int,) Item() int {
	return i.iter.Item()
}

func (i instantiate୦୦selectIter୦int,) Err() error {
	return i.iter.Err()
}

//line iter.go2:143
type instantiate୦୦mapIter୦string୦int struct {
//line iter.go2:72
 f    func(string,) (int, error)
			err  error
			item int
			iter instantiate୦୦Iter୦string
}

func (i *instantiate୦୦mapIter୦string୦int,) Next() bool {
	if !i.iter.Next() {
		return false
	}
	x, err := i.f(i.iter.Item())
	if err != nil {
		i.err = nil
		return false
	}
	i.item = x
	return true
}

func (i *instantiate୦୦mapIter୦string୦int,) Item() int {
	return i.item
}

func (i *instantiate୦୦mapIter୦string୦int,) Err() error {
	if err := i.iter.Err(); err != nil {
		return err
	}
	return i.err
}

//line iter.go2:100
var _ = bufio.ErrAdvanceTooFar
//line iter.go2:100
var _ = fmt.Errorf

//line iter.go2:100
type _ io.ByteReader

//line iter.go2:100
var _ = strconv.AppendBool

//line iter.go2:100
type _ strings.Builder
